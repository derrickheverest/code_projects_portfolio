// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Sys.jack

/**
 * A library of basic system services.
 */
class Sys {

    /** Performs all the initializations required by the OS. */
    function void init() {
		do Memory.init();
		do Math.init();
		do Screen.init();
		do Output.init();
		do Keyboard.init();
		do Main.main();
		do Sys.halt();
		return;
	}

    /** Halts execution. */
    function void halt() {
		var String s;
		do Sys.wait(5000);
		do Output.println();
		do Output.println();
		let s = "Halt has been Called";
		do Output.printString( s);
		do s.dispose();
		while(true){ // infinite loop is the end of us all!
			
		}
		return;
    }

    /** Waits approximately duration milliseconds and then returns. */
	/*  the number of hertz / 1000 will be the number of ticks needed.*/
    function void wait(int duration) {
		var int ticksInAMillisecond;
		if( duration < 0) { do Sys.error(1);}
		while(duration > 0){
			let ticksInAMillisecond = 128 ;// macbook 
			//let ticksInAMillisecond = 10000;//SPartan 6 hack is about 10 Mhz therefore needs 10**4 ticks 
			while ( ticksInAMillisecond > 0 ){
				let ticksInAMillisecond = ticksInAMillisecond -1;
			}
			let duration = duration - 1;
		}
		return;
    }

    /** Prints the given error code in the form "ERR<errorCode>", and halts. */
    function void error(int errorCode) {
		var String t;
		let t = "ERR";
		do Output.printString( t);
		do t.dispose();
		do Output.printInt( errorCode);
		do Sys.halt();
		return;
    }
}
