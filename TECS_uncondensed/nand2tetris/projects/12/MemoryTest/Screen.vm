function Screen.init 2
push constant 0
not
pop static 1
push constant 17
call Array.new 1
pop static 0
push constant 0
pop local 0
push constant 1
neg
pop local 1
label WHILE_EXP0
push local 0
push constant 17
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
push local 1
push local 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.maxScreen 0
push constant 8192
return
function Screen.screenBase 0
push constant 16384
return
function Screen.maxWidth 0
push constant 512
return
function Screen.maxHeight 0
push constant 256
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
call Screen.maxScreen 0
lt
not
if-goto WHILE_END0
call Screen.screenBase 0
push local 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 1
push constant 0
return
function Screen.drawPixel 4
push argument 1
push constant 0
lt
push argument 0
push constant 0
lt
or
push argument 1
call Screen.maxHeight 0
lt
not
or
push argument 0
call Screen.maxWidth 0
lt
not
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
call Screen.screenBase 0
push argument 1
push constant 5
call Math.leftShiftby 2
add
push argument 0
push constant 4
call Math.rightShiftby 2
add
pop local 0
push argument 0
push constant 15
and
pop local 1
push local 0
call Memory.peek 1
pop local 2
push static 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
push local 1
call Math.setbit 2
pop local 3
goto IF_END1
label IF_FALSE1
push local 2
push local 1
call Math.clearbit 2
pop local 3
label IF_END1
push local 0
push local 3
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 7
push constant 6
pop local 6
push argument 2
push argument 0
add
call Math.rightShift 1
pop local 0
push argument 3
push argument 1
add
call Math.rightShift 1
pop local 1
push local 0
push argument 0
add
call Math.rightShift 1
pop local 2
push local 1
push argument 1
add
call Math.rightShift 1
pop local 3
push argument 2
push local 0
add
call Math.rightShift 1
pop local 4
push argument 3
push local 1
add
call Math.rightShift 1
pop local 5
push argument 1
push argument 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 2
call Math.min 2
push argument 1
push argument 0
push argument 2
call Math.max 2
push argument 1
call Screen.drawHorizontalLine 4
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 0
push argument 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.drawRectangle 4
pop temp 0
goto IF_END1
label IF_FALSE1
push argument 0
push argument 2
sub
call Math.abs 1
push argument 1
push argument 3
sub
call Math.abs 1
add
push constant 200
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.FAST_LINES 4
pop temp 0
goto IF_END2
label IF_FALSE2
push argument 0
push argument 1
push local 2
push local 3
call Screen.FAST_LINES 4
pop temp 0
push local 2
push local 3
push local 0
push local 1
call Screen.FAST_LINES 4
pop temp 0
push local 0
push local 1
push local 4
push local 5
call Screen.FAST_LINES 4
pop temp 0
push local 4
push local 5
push argument 2
push argument 3
call Screen.FAST_LINES 4
pop temp 0
label IF_END2
label IF_END1
label IF_END0
push constant 0
return
function Screen.drawRectangle 11
push argument 0
push argument 2
call Math.min 2
pop local 0
push argument 1
push argument 3
call Math.min 2
pop local 1
push argument 0
push argument 2
call Math.max 2
pop local 6
push argument 1
push argument 3
call Math.max 2
pop local 7
push argument 0
push argument 2
call Math.max 2
pop local 2
push argument 1
push argument 3
call Math.min 2
pop local 3
push argument 0
push argument 2
call Math.min 2
pop local 4
push argument 1
push argument 3
call Math.max 2
pop local 5
call Screen.screenBase 0
push local 1
push constant 5
call Math.leftShiftby 2
add
push local 0
push constant 4
call Math.rightShiftby 2
add
pop local 8
call Screen.screenBase 0
push local 3
push constant 5
call Math.leftShiftby 2
add
push local 2
push constant 4
call Math.rightShiftby 2
add
pop local 9
label WHILE_EXP0
push local 1
push local 5
gt
not
not
if-goto WHILE_END0
push local 9
push local 8
sub
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 8
push constant 1
add
push local 9
push constant 1
sub
call Screen.drawMultBars 2
pop temp 0
label IF_FALSE0
push local 0
push local 1
push local 2
push local 3
push local 8
push local 9
call Screen.drawPartialBar 6
pop temp 0
push local 8
push constant 32
add
pop local 8
push local 9
push constant 32
add
pop local 9
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 5
push constant 1
push argument 2
sub
pop local 0
push constant 1
pop local 1
push argument 2
call Math.leftShift 1
neg
pop local 2
push constant 0
pop local 3
push argument 2
pop local 4
push argument 0
push argument 2
sub
push argument 1
push argument 0
push argument 2
add
push argument 1
call Screen.drawHorizontalLine 4
pop temp 0
label WHILE_EXP0
push local 3
push local 4
lt
not
if-goto WHILE_END0
push local 0
push constant 0
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
push constant 1
sub
pop local 4
push local 2
push constant 2
add
pop local 2
push local 0
push local 2
add
pop local 0
label IF_FALSE0
push local 3
push constant 1
add
pop local 3
push local 1
push constant 2
add
pop local 1
push local 0
push local 1
add
pop local 0
push argument 0
push local 3
sub
push argument 1
push local 4
add
push argument 0
push local 3
add
push argument 1
push local 4
add
call Screen.drawHorizontalLine 4
pop temp 0
push argument 0
push local 3
sub
push argument 1
push local 4
sub
push argument 0
push local 3
add
push argument 1
push local 4
sub
call Screen.drawHorizontalLine 4
pop temp 0
push argument 0
push local 4
sub
push argument 1
push local 3
add
push argument 0
push local 4
add
push argument 1
push local 3
add
call Screen.drawHorizontalLine 4
pop temp 0
push argument 0
push local 4
sub
push argument 1
push local 3
sub
push argument 0
push local 4
add
push argument 1
push local 3
sub
call Screen.drawHorizontalLine 4
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircleUnFilled 5
push constant 1
push argument 2
sub
pop local 0
push constant 1
pop local 1
push argument 2
call Math.leftShift 1
neg
pop local 2
push constant 0
pop local 3
push argument 2
pop local 4
push argument 0
push argument 1
push argument 2
add
call Screen.drawPixel 2
pop temp 0
push argument 0
push argument 1
push argument 2
sub
call Screen.drawPixel 2
pop temp 0
push argument 0
push argument 2
add
push argument 1
call Screen.drawPixel 2
pop temp 0
push argument 0
push argument 2
sub
push argument 1
call Screen.drawPixel 2
pop temp 0
label WHILE_EXP0
push local 3
push local 4
lt
not
if-goto WHILE_END0
push local 0
push constant 0
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
push constant 1
sub
pop local 4
push local 2
push constant 2
add
pop local 2
push local 0
push local 2
add
pop local 0
label IF_FALSE0
push local 3
push constant 1
add
pop local 3
push local 1
push constant 2
add
pop local 1
push local 0
push local 1
add
pop local 0
push argument 0
push local 3
add
push argument 1
push local 4
add
call Screen.drawPixel 2
pop temp 0
push argument 0
push local 3
sub
push argument 1
push local 4
add
call Screen.drawPixel 2
pop temp 0
push argument 0
push local 3
add
push argument 1
push local 4
sub
call Screen.drawPixel 2
pop temp 0
push argument 0
push local 3
sub
push argument 1
push local 4
sub
call Screen.drawPixel 2
pop temp 0
push argument 0
push local 4
add
push argument 1
push local 3
add
call Screen.drawPixel 2
pop temp 0
push argument 0
push local 4
sub
push argument 1
push local 3
add
call Screen.drawPixel 2
pop temp 0
push argument 0
push local 4
add
push argument 1
push local 3
sub
call Screen.drawPixel 2
pop temp 0
push argument 0
push local 4
sub
push argument 1
push local 3
sub
call Screen.drawPixel 2
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawBar 0
push argument 0
push static 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawMultBars 0
label WHILE_EXP0
push argument 0
push argument 1
gt
not
not
if-goto WHILE_END0
push constant 0
push argument 0
add
push static 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 1
add
pop argument 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawHorizontalLine 2
push argument 3
push argument 1
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.drawLine 4
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 1
push constant 0
lt
push argument 3
call Screen.maxHeight 0
lt
not
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push argument 0
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop argument 0
label IF_FALSE2
push argument 2
call Screen.maxWidth 0
lt
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
call Screen.maxWidth 0
push constant 1
sub
pop argument 2
label IF_FALSE3
call Screen.screenBase 0
push argument 1
push constant 5
call Math.leftShiftby 2
add
push argument 0
push constant 4
call Math.rightShiftby 2
add
pop local 0
call Screen.screenBase 0
push argument 3
push constant 5
call Math.leftShiftby 2
add
push argument 2
push constant 4
call Math.rightShiftby 2
add
pop local 1
push local 1
push local 0
sub
push constant 1
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push constant 1
add
push local 1
push constant 1
sub
call Screen.drawMultBars 2
pop temp 0
label IF_FALSE4
push argument 0
push argument 1
push argument 2
push argument 3
push local 0
push local 1
call Screen.drawPartialBar 6
pop temp 0
push constant 0
return
function Screen.drawPartialBar 0
push argument 4
push argument 5
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
push argument 4
add
push constant 0
push argument 4
add
pop pointer 1
push that 0
push argument 0
push constant 15
and
push static 0
add
pop pointer 1
push that 0
push argument 2
push constant 15
and
push constant 1
add
push static 0
add
pop pointer 1
push that 0
not
and
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END1
label IF_FALSE1
push constant 0
push argument 4
add
push constant 0
push argument 4
add
pop pointer 1
push that 0
push argument 0
push constant 15
and
push static 0
add
pop pointer 1
push that 0
not
push argument 2
push constant 15
and
push constant 1
add
push static 0
add
pop pointer 1
push that 0
or
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END1
goto IF_END0
label IF_FALSE0
push static 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
push argument 4
add
push constant 0
push argument 4
add
pop pointer 1
push that 0
push argument 0
push constant 15
and
push static 0
add
pop pointer 1
push that 0
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push argument 5
add
push constant 0
push argument 5
add
pop pointer 1
push that 0
push argument 2
push constant 15
and
push constant 1
add
push static 0
add
pop pointer 1
push that 0
not
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END2
label IF_FALSE2
push constant 0
push argument 4
add
push constant 0
push argument 4
add
pop pointer 1
push that 0
push argument 0
push constant 15
and
push static 0
add
pop pointer 1
push that 0
not
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push argument 5
add
push constant 0
push argument 5
add
pop pointer 1
push that 0
push argument 2
push constant 15
and
push constant 1
add
push static 0
add
pop pointer 1
push that 0
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END2
label IF_END0
push constant 0
return
function Screen.FAST_LINES 6
push constant 15
pop local 4
push argument 3
push argument 1
sub
pop local 0
push argument 2
push argument 0
sub
pop local 1
push local 0
push local 0
push local 4
call Math.rightShiftby 2
call Math.XOR 2
push local 0
push local 4
call Math.rightShiftby 2
sub
push local 1
push local 1
push local 4
call Math.rightShiftby 2
call Math.XOR 2
push local 1
push local 4
call Math.rightShiftby 2
sub
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 1
call Math.XOR 2
pop local 0
push local 1
push local 0
call Math.XOR 2
pop local 1
push local 0
push local 1
call Math.XOR 2
pop local 0
push constant 0
not
pop local 5
goto IF_END0
label IF_FALSE0
push constant 0
pop local 5
label IF_END0
push local 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
neg
pop local 2
goto IF_END1
label IF_FALSE1
push constant 1
pop local 2
label IF_END1
push constant 0
pop local 3
label WHILE_EXP0
push local 3
push local 1
eq
not
not
if-goto WHILE_END0
push local 5
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push constant 0
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 0
push local 3
push local 0
call Math.multiply 2
add
push argument 1
push local 3
add
call Screen.drawPixel 2
pop temp 0
goto IF_END3
label IF_FALSE3
push argument 0
push local 3
push local 0
call Math.multiply 2
push local 1
call Math.divide 2
add
push argument 1
push local 3
add
call Screen.drawPixel 2
pop temp 0
label IF_END3
goto IF_END2
label IF_FALSE2
push local 1
push constant 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 0
push local 3
add
push argument 1
push local 3
push local 0
call Math.multiply 2
add
call Screen.drawPixel 2
pop temp 0
goto IF_END4
label IF_FALSE4
push argument 0
push local 3
add
push argument 1
push local 3
push local 0
call Math.multiply 2
push local 1
call Math.divide 2
add
call Screen.drawPixel 2
pop temp 0
label IF_END4
label IF_END2
push local 3
push local 2
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
